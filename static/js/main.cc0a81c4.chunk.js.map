{"version":3,"sources":["api.ts","untils.ts","Components/Similar.tsx","Components/Details.tsx","Components/DetailsTv.tsx","Components/Header.tsx","Routes/Home.tsx","useWindowDimensions.tsx","Routes/Movies.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["API_KEY","BASE_PATH","getLatest","fetch","then","response","json","getMovies","getTopRated","getPopular","getUpComing","getDetails","moviesId","getTv","getTopRatedTv","getPopularTv","makeImagePath","id","format","Wrapper","styled","div","Loader","Row","motion","Movie","props","bgPhoto","Title","h3","BoxVariants","narmal","scale","hover","y","transition","delay","duration","type","Similar","params","useParams","useState","similarIndex","setLeaving","navigate","useNavigate","useQuery","similarData","data","similarLoading","isLoading","AnimatePresence","initial","onExitComplete","prev","results","slice","map","movie","layoutId","whileHover","variants","onClick","movieId","backdrop_path","BigCover","BigTitle","theme","white","lighter","BigIconWrap","BigPlayBtn","BigPlayIcon","svg","IconWrap","BigIcon","BigOverview","Genres","Genre","span","RunTime","p","Details","detailsData","console","log","time","runtime","timeHour","Math","floor","timeMinutes","style","backgroundImage","title","xmlns","viewBox","d","release_date","overview","genres","n","name","DetailsTv","tvId","Nav","nav","Col","Logo","red","Items","ul","Item","li","darker","Circle","Search","form","Input","input","logoVariants","normal","fillOpacity","active","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","searchOpen","setSearchOpen","homeMatch","useMatch","moviesMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","useForm","register","handleSubmit","animate","width","height","path","fill","to","onSubmit","keyword","scaleX","x","fillRule","clipRule","required","minLength","placeholder","BoxWrap","MoviesBox","Overlay","Home","poster_path","getWindowDimensions","window","innerWidth","useWindowDimensions","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","Banner","h2","Overview","SliderWrap","Slider","SliderTitle","Box","NextBtn","PrevBtn","BtnSvg","InfoWrap","Info","black","InfoIcon","InfoText","LatestWrap","BigMovie","infoVariants","display","opacity","Movies","index","setIndex","topIndex","setTopIndex","upIndex","setUpIndex","leaving","back","setBack","liVar","entry","center","exit","bigMovieMatch","moviesData","moviesLoading","topData","topLoading","upData","upLoading","incraseIndex","toggleLeaving","totalMovies","length","maxIndex","topMoviesIndex","upComingIndex","onBoxClicked","find","Number","custom","adult","original_language","h1","BoxContainer","location","useLocation","URLSearchParams","search","getSearch","mediaType","searchId","media_type","tv","BigTv","Tv","todayIndex","setTodayIndex","popularIndex","setPopularIndex","todayData","todayLoading","popularData","totalTv","popularSliderIndex","topSliderIndex","vote_average","first_air_date","App","process","element","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.cc0a81c4.chunk.js","sourcesContent":["const API_KEY = \"7ddf9cba8020cc2542ed7ffeaa0c1787\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\ninterface ILatest {\n  id: number;\n  name: string;\n}\n\ninterface IMovie {\n  adult: boolean;\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n  popularity: number;\n  release_date: string;\n  original_language: string;\n  genre_ids: [number];\n}\n\ninterface IUp {\n  poster_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  id: number;\n  original_language: string;\n  title: string;\n  backdrop_path: string;\n  popularity: number;\n  genre_ids: [number];\n}\ninterface ITop {\n  poster_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  id: number;\n  original_language: string;\n  title: string;\n  backdrop_path: string;\n  popularity: number;\n  genre_ids: [number];\n}\n\ninterface IPopular {\n  poster_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  id: number;\n  original_language: string;\n  title: string;\n  backdrop_path: string;\n  popularity: number;\n}\n\ninterface ISimilar {\n  poster_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  id: number;\n  original_language: string;\n  title: string;\n  backdrop_path: string;\n  popularity: number;\n  genre_ids: [number];\n}\n\nexport interface IGetMoviesLatets {\n  adult: boolean;\n  backdrop_path: string;\n  genres: ILatest[];\n  id: number;\n  original_language: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  runtime: number;\n  tagline: string;\n  title: string;\n  homepage: string;\n}\n\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport interface IGetMoviesTop {\n  page: number;\n  results: ITop[];\n  total_results: number;\n  total_pages: number;\n}\n\nexport interface IGetUpComing {\n  results: IUp[];\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  total_pages: number;\n  total_results: number;\n}\n\nexport interface IGetPopular {\n  page: number;\n  results: IPopular[];\n  total_results: number;\n  total_pages: number;\n}\n\nexport interface IGetSimilar {\n  page: number;\n  results: ISimilar[];\n\n  total_pages: number;\n  total_results: number;\n}\n\ninterface IGenres {\n  id: number;\n  name: string;\n}\nexport interface IGetDetails {\n  adult: boolean;\n  backdrop_path: string;\n  genres: IGenres[];\n  homepage: string;\n  id: number;\n  title: string;\n  vote_average: number;\n  overview: string;\n  poster_path?: string;\n  name: string;\n  runtime: number;\n  number_of_seasons: number;\n  release_date: string;\n}\nexport function getLatest() {\n  return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getTopRated() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getPopular() {\n  return fetch(`${BASE_PATH}/movie/popular?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getUpComing() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getSimilar(moviesId: string) {\n  return fetch(\n    `${BASE_PATH}/movie/${moviesId}/similar?api_key=${API_KEY}`\n  ).then((response) => response.json());\n}\n\n// Genres\nexport function getDetails(moviesId: string) {\n  return fetch(`${BASE_PATH}/movie/${moviesId}?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\n//tv function\ninterface ITv {\n  poster_path: string;\n  vote_average: number;\n  id: number;\n  backdrop_path: string;\n  overview: string;\n  first_air_date: string;\n  origin_country: [string];\n  original_language: string;\n  name: string;\n  original_name: string;\n}\nexport interface IGetTv {\n  page: number;\n  results: ITv[];\n  total_results: number;\n  total_pages: number;\n}\ninterface tvCreated {\n  id: number;\n  credit_id: string;\n  name: string;\n  gender: number;\n  profile_path: string;\n}\ninterface tvGenres {\n  id: number;\n  name: string;\n}\n\ninterface tvSeasons {\n  air_date: string;\n  episode_count: number;\n  id: number;\n  name: string;\n  overview: string;\n  poster_path: string;\n  season_number: number;\n}\n\nexport interface IGetDetailsTv {\n  backdrop_path: string;\n  created_by: tvCreated[];\n  name: string;\n\n  episode_run_time: [number];\n  first_air_date: string;\n  genres: tvGenres[];\n  id: number;\n  in_production: boolean;\n  languages: [string];\n  last_air_date: string;\n  overview: string;\n  number_of_episodes: number;\n  number_of_seasons: number;\n  origin_country: [string];\n  original_language: string;\n\n  seasons: tvSeasons[];\n\n  tagline: string;\n}\n\nexport interface IGetSimilarTv {\n  page: number;\n  results: ISimilar[];\n  total_pages: number;\n  total_results: number;\n}\n\ninterface ITopTv {\n  poster_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  id: number;\n  original_language: string;\n  name: string;\n  backdrop_path: string;\n  popularity: number;\n  genre_ids: [number];\n}\n\ninterface IPopularTv {\n  poster_path: string;\n  popularity: number;\n  id: number;\n  backdrop_path: string;\n  vote_average: number;\n  overview: string;\n  first_air_date: string;\n  original_language: string;\n  vote_count: number;\n  name: string;\n}\n\nexport interface IGetTopTv {\n  page: number;\n  results: IPopularTv[];\n  total_results: number;\n  total_pages: number;\n}\n\nexport interface IGetPopularTv {\n  page: number;\n  results: IPopularTv[];\n  total_results: number;\n  total_pages: number;\n}\n\nexport function getTv() {\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getDetailTv(tvId: string) {\n  return fetch(`${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\nexport function getSimilarTv(tvId: string) {\n  return fetch(`${BASE_PATH}/tv/${tvId}/simila?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTopRatedTv() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getPopularTv() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\n// search\ninterface ISearch {\n  poster_path: string;\n  popularity: number;\n  id: number;\n  overview: string;\n  backdrop_path: string;\n  media_type: string;\n  genre_ids: [number];\n  title: string;\n}\nexport interface IGetSearch {\n  results: ISearch[];\n\n  total_results: number;\n  total_pages: number;\n}\nexport function getSearch(keyword: string) {\n  return fetch(\n    `${BASE_PATH}/search/multi?api_key=${API_KEY}&query=${keyword}`\n  ).then((response) => response.json());\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getSimilar, IGetSimilar } from \"../api\";\nimport { makeImagePath } from \"../untils\";\n\nconst Wrapper = styled.div`\n  padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(2, 1fr);\n  position: absolute;\n  left: 20px;\n  width: 95%;\n`;\n\nconst Movie = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n  height: 200px;\n  font-size: 66px;\n  border-radius: 15px;\n\n  cursor: pointer;\n  transform-origin: center left;\n  &:nth-child(even) {\n    transform-origin: center right;\n  }\n`;\n\nconst Title = styled.h3`\n  width: 100%;\n  height: 50px;\n  padding: 10px;\n  position: relative;\n  left: 15px;\n  font-size: 30px;\n  font-weight: 700;\n`;\nconst offset = 6;\n\nconst BoxVariants = {\n  narmal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nfunction Similar() {\n  const params = useParams();\n  const [similarIndex, setSimilarIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const navigate = useNavigate();\n\n  const { data: similarData, isLoading: similarLoading } =\n    useQuery<IGetSimilar>(\"similar\", () => getSimilar(params.id + \"\"));\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <Wrapper>\n      {similarLoading ? (\n        <Loader>Similar Movies is loading...</Loader>\n      ) : (\n        <>\n          <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n            <Title>Similar Movies</Title>\n            <Row transition={{ type: \"tween\", duration: 1 }} key={similarIndex}>\n              {similarData?.results\n                .slice(1)\n                .slice(offset * similarIndex, offset * similarIndex + offset)\n                .map((movie) => (\n                  <Movie\n                    layoutId={movie.id + \"\"}\n                    key={movie.id}\n                    whileHover=\"hover\"\n                    initial=\"normal\"\n                    variants={BoxVariants}\n                    onClick={() => onBoxClicked(movie.id)}\n                    transition={{ type: \"tween\" }}\n                    bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                  ></Movie>\n                ))}\n            </Row>\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Similar;\n","import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getDetails, IGetDetails } from \"../api\";\nimport { makeImagePath } from \"../untils\";\nimport Similar from \"./Similar\";\nconst Wrapper = styled.div`\n  padding-bottom: 200px;\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n  border-radius: 15px 15px 0px 0px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n\n  font-weight: 700;\n`;\n\nconst BigIconWrap = styled.div`\n  width: 100%;\n  height: 50px;\n  position: absolute;\n  top: 340px;\n`;\n\nconst BigPlayBtn = styled.div`\n  width: 120px;\n  height: 50px;\n  position: absolute;\n  top: 0px;\n  left: 20px;\n  border: solid 1px rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  gap: 20px;\n  span {\n    font-size: 20px;\n    font-weight: 700;\n    padding: 10px;\n  }\n`;\n\nconst BigPlayIcon = styled.svg`\n  position: relative;\n  top: 0px;\n  left: 15px;\n  width: 25px;\n  height: 25px;\n  fill: white;\n`;\n\nconst IconWrap = styled.div`\n  width: 180px;\n  position: absolute;\n  top: 5px;\n  left: 160px;\n  fill: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BigIcon = styled.svg`\n  width: 40px;\n  margin-right: 10px;\n  &:last-child {\n    position: relative;\n    left: 400px;\n  }\n`;\n\nconst BigOverview = styled.div`\n  padding: 20px;\n  height: 200px;\n  margin-bottom: 20px;\n  position: relative;\n  top: 0px;\n  color: ${(props) => props.theme.white.lighter};\n  span {\n    font-size: 12px;\n    color: rgb(126, 236, 126);\n    font-weight: 700;\n    margin-right: 10px;\n    float: left;\n  }\n  p {\n    font-size: 28px;\n    font-weight: 700;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Genres = styled.div`\n  width: 100%;\n  margin-top: 10px;\n  padding: 10px;\n`;\n\nconst Genre = styled.span`\n  color: rgb(139, 120, 120) !important;\n`;\n\nconst RunTime = styled.p`\n  width: 100%;\n  height: 20px;\n  margin: 20px 0px 0px 0px;\n  span {\n    color: white;\n    font-size: 18px;\n    &:first-child {\n    }\n  }\n`;\n\ninterface RouteParams {\n  movieId: string;\n  tvId: string;\n}\nconst Details = () => {\n  let params = useParams();\n  const { data: detailsData, isLoading: detailsLoading } =\n    useQuery<IGetDetails>(\"details\", () => getDetails(params.id + \"\"));\n  console.log(params.id);\n  const time = detailsData?.runtime;\n  const timeHour = time && Math.floor(time / 60);\n  const timeMinutes = time && time % 60;\n  return (\n    <Wrapper>\n      {detailsData && (\n        <>\n          <BigCover\n            style={{\n              backgroundImage: detailsData?.backdrop_path\n                ? `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                    detailsData?.backdrop_path,\n                    \"w500\"\n                  )})`\n                : \"no poster\",\n            }}\n          />\n          <BigTitle>{detailsData?.title}</BigTitle>\n          <BigIconWrap>\n            <BigPlayBtn>\n              <BigPlayIcon\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 384 512\"\n              >\n                <path d=\"M361 215C375.3 223.8 384 239.3 384 256C384 272.7 375.3 288.2 361 296.1L73.03 472.1C58.21 482 39.66 482.4 24.52 473.9C9.377 465.4 0 449.4 0 432V80C0 62.64 9.377 46.63 24.52 38.13C39.66 29.64 58.21 29.99 73.03 39.04L361 215z\" />\n              </BigPlayIcon>\n              <span>Play</span>\n            </BigPlayBtn>\n            <IconWrap>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                <path d=\"M200 344V280H136C122.7 280 112 269.3 112 256C112 242.7 122.7 232 136 232H200V168C200 154.7 210.7 144 224 144C237.3 144 248 154.7 248 168V232H312C325.3 232 336 242.7 336 256C336 269.3 325.3 280 312 280H248V344C248 357.3 237.3 368 224 368C210.7 368 200 357.3 200 344zM0 96C0 60.65 28.65 32 64 32H384C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96zM48 96V416C48 424.8 55.16 432 64 432H384C392.8 432 400 424.8 400 416V96C400 87.16 392.8 80 384 80H64C55.16 80 48 87.16 48 96z\" />\n              </BigIcon>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n              </BigIcon>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n              </BigIcon>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\n                <path d=\"M301.2 34.85c-11.5-5.188-25.02-3.122-34.44 5.253L131.8 160H48c-26.51 0-48 21.49-48 47.1v95.1c0 26.51 21.49 47.1 48 47.1h83.84l134.9 119.9c5.984 5.312 13.58 8.094 21.26 8.094c4.438 0 8.972-.9375 13.17-2.844c11.5-5.156 18.82-16.56 18.82-29.16V64C319.1 51.41 312.7 40 301.2 34.85zM513.9 255.1l47.03-47.03c9.375-9.375 9.375-24.56 0-33.94s-24.56-9.375-33.94 0L480 222.1L432.1 175c-9.375-9.375-24.56-9.375-33.94 0s-9.375 24.56 0 33.94l47.03 47.03l-47.03 47.03c-9.375 9.375-9.375 24.56 0 33.94c9.373 9.373 24.56 9.381 33.94 0L480 289.9l47.03 47.03c9.373 9.373 24.56 9.381 33.94 0c9.375-9.375 9.375-24.56 0-33.94L513.9 255.1z\" />\n              </BigIcon>\n            </IconWrap>\n          </BigIconWrap>\n\n          <BigOverview>\n            {detailsData?.release_date.slice(0, 4) === \"2022\" ? (\n              <>\n                <span>New</span>\n                <p>{detailsData?.release_date.slice(0, 4)}</p>\n              </>\n            ) : (\n              <p>{detailsData?.release_date.slice(0, 4)}</p>\n            )}\n            {detailsData?.overview}\n            <RunTime>\n              <span>runtime: </span>\n              <span>{`${timeHour}H ${timeMinutes}M`}</span>\n            </RunTime>\n            <Genres>\n              {detailsData?.genres.map((n) => (\n                <Genre key={n.id}>{n.name}</Genre>\n              ))}\n            </Genres>\n          </BigOverview>\n        </>\n      )}\n      <Similar />\n    </Wrapper>\n  );\n};\n\nexport default Details;\n","import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getDetailTv, IGetDetailsTv } from \"../api\";\nimport { makeImagePath } from \"../untils\";\nimport SimilarTv from \"./SimilarTv\";\nconst Wrapper = styled.div`\n  padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n  border-radius: 15px 15px 0px 0px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n\n  font-weight: 700;\n`;\n\nconst BigIconWrap = styled.div`\n  width: 100%;\n  height: 50px;\n  position: absolute;\n  top: 340px;\n`;\n\nconst BigPlayBtn = styled.div`\n  width: 120px;\n  height: 50px;\n  position: absolute;\n  top: 0px;\n  left: 20px;\n  border: solid 1px rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  gap: 20px;\n  span {\n    font-size: 20px;\n    font-weight: 700;\n    padding: 10px;\n  }\n`;\n\nconst BigPlayIcon = styled.svg`\n  position: relative;\n  top: 0px;\n  left: 15px;\n  width: 25px;\n  height: 25px;\n  fill: white;\n`;\n\nconst IconWrap = styled.div`\n  width: 180px;\n  position: absolute;\n  top: 5px;\n  left: 160px;\n  fill: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BigIcon = styled.svg`\n  width: 40px;\n  margin-right: 10px;\n  &:last-child {\n    position: relative;\n    left: 400px;\n  }\n`;\n\nconst BigOverview = styled.div`\n  padding: 20px;\n  height: 200px;\n  margin-bottom: 20px;\n  position: relative;\n  top: 0px;\n  color: ${(props) => props.theme.white.lighter};\n  span {\n    font-size: 12px;\n    color: rgb(126, 236, 126);\n    font-weight: 700;\n    margin-right: 10px;\n    float: left;\n  }\n  p {\n    font-size: 28px;\n    font-weight: 700;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Genres = styled.div`\n  width: 100%;\n  margin-top: 10px;\n  padding: 10px;\n`;\n\nconst Genre = styled.span`\n  color: rgb(139, 120, 120) !important;\n`;\n\nconst RunTime = styled.p`\n  width: 100%;\n  height: 20px;\n  margin: 20px 0px 0px 0px;\n  span {\n    color: white;\n    font-size: 18px;\n    &:first-child {\n    }\n  }\n`;\n\nconst DetailsTv = () => {\n  let params = useParams();\n  const { data: detailsData, isLoading: detailsLoading } =\n    useQuery<IGetDetailsTv>(\"detailsTv\", () => getDetailTv(params.id + \"\"));\n  console.log(detailsData);\n\n  return (\n    <Wrapper>\n      {detailsData && (\n        <>\n          <BigCover\n            style={{\n              backgroundImage: detailsData?.backdrop_path\n                ? `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                    detailsData?.backdrop_path,\n                    \"w500\"\n                  )})`\n                : \"no poster\",\n            }}\n          />\n          <BigTitle>{detailsData?.name}</BigTitle>\n          <BigIconWrap>\n            <BigPlayBtn>\n              <BigPlayIcon\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 384 512\"\n              >\n                <path d=\"M361 215C375.3 223.8 384 239.3 384 256C384 272.7 375.3 288.2 361 296.1L73.03 472.1C58.21 482 39.66 482.4 24.52 473.9C9.377 465.4 0 449.4 0 432V80C0 62.64 9.377 46.63 24.52 38.13C39.66 29.64 58.21 29.99 73.03 39.04L361 215z\" />\n              </BigPlayIcon>\n              <span>Play</span>\n            </BigPlayBtn>\n            <IconWrap>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                <path d=\"M200 344V280H136C122.7 280 112 269.3 112 256C112 242.7 122.7 232 136 232H200V168C200 154.7 210.7 144 224 144C237.3 144 248 154.7 248 168V232H312C325.3 232 336 242.7 336 256C336 269.3 325.3 280 312 280H248V344C248 357.3 237.3 368 224 368C210.7 368 200 357.3 200 344zM0 96C0 60.65 28.65 32 64 32H384C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96zM48 96V416C48 424.8 55.16 432 64 432H384C392.8 432 400 424.8 400 416V96C400 87.16 392.8 80 384 80H64C55.16 80 48 87.16 48 96z\" />\n              </BigIcon>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n              </BigIcon>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n              </BigIcon>\n              <BigIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\n                <path d=\"M301.2 34.85c-11.5-5.188-25.02-3.122-34.44 5.253L131.8 160H48c-26.51 0-48 21.49-48 47.1v95.1c0 26.51 21.49 47.1 48 47.1h83.84l134.9 119.9c5.984 5.312 13.58 8.094 21.26 8.094c4.438 0 8.972-.9375 13.17-2.844c11.5-5.156 18.82-16.56 18.82-29.16V64C319.1 51.41 312.7 40 301.2 34.85zM513.9 255.1l47.03-47.03c9.375-9.375 9.375-24.56 0-33.94s-24.56-9.375-33.94 0L480 222.1L432.1 175c-9.375-9.375-24.56-9.375-33.94 0s-9.375 24.56 0 33.94l47.03 47.03l-47.03 47.03c-9.375 9.375-9.375 24.56 0 33.94c9.373 9.373 24.56 9.381 33.94 0L480 289.9l47.03 47.03c9.373 9.373 24.56 9.381 33.94 0c9.375-9.375 9.375-24.56 0-33.94L513.9 255.1z\" />\n              </BigIcon>\n            </IconWrap>\n          </BigIconWrap>\n\n          <BigOverview>\n            {detailsData?.overview}\n            <Genres>\n              {detailsData?.genres.map((n) => (\n                <Genre key={n.id}>{n.name}</Genre>\n              ))}\n            </Genres>\n          </BigOverview>\n        </>\n      )}\n      {/* <SimilarTv /> */}\n    </Wrapper>\n  );\n};\n\nexport default DetailsTv;\n","import { Link, useMatch, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  background: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n  z-index: 9;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0px auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Search = styled.form`\n  display: flex;\n  align-items: center;\n  color: white;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0,0,0,0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0,0,0,1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useMatch(\"/\");\n  const moviesMatch = useMatch(\"movies\");\n  const tvMatch = useMatch(\"tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navVariants]);\n  const navigate = useNavigate();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onVaild = (data: IForm) => {\n    navigate(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Logo\n          variants={logoVariants}\n          initial=\"normal\"\n          whileHover=\"active\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path\n            d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\n            fill=\"#d81f26\"\n          />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">Home{homeMatch && <Circle layoutId=\"circle\" />}</Link>\n          </Item>\n          <Item>\n            <Link to=\"movies\">\n              Movies{moviesMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"tv\">\n              Tv Shows{tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onVaild)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -215 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getPopular, IGetPopular } from \"../api\";\nimport { makeImagePath } from \"../untils\";\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: black;\n  padding-bottom: 200px;\n  overflow: hidden;\n  h1 {\n    width: 350px;\n    height: 100px;\n    position: absolute;\n    left: 50vw;\n    margin-left: -175px;\n    top: 50vh;\n    margin-top: -50px;\n    font-size: 48px;\n    font-weight: 700;\n    z-index: 9;\n  }\n`;\n\nconst BoxWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\nconst MoviesBox = styled.div`\n  width: 300px;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  row-gap: 20px;\n  column-gap: 10px;\n  float: left;\n  margin-left: 10px;\n  /* &:nth-child(even) {\n    position: relative;\n    top: -225px;\n  } */\n`;\n\nconst Overlay = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 2;\n`;\n\nconst Movie = styled.div<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n  width: 300px;\n  height: 450px;\n  background-color: red;\n  float: left;\n  &:nth-child(even) {\n    background-color: blue;\n    position: relative;\n    top: -225px;\n  }\n`;\n\nfunction Home() {\n  const { data, isLoading } = useQuery<IGetPopular>(\n    [\"movies\", \"popular\"],\n    getPopular\n  );\n  return (\n    <Wrapper>\n      <Link to={\"/movies\"}>\n        <h1>Nomflix Start</h1>\n      </Link>\n      <BoxWrap>\n        <MoviesBox>\n          {data?.results.map((movie) => (\n            <Movie\n              key={movie.id}\n              bgPhoto={makeImagePath(movie.poster_path, \"w500\")}\n            ></Movie>\n          ))}\n        </MoviesBox>\n      </BoxWrap>\n      <Overlay />\n    </Wrapper>\n  );\n}\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width } = window;\n  return width;\n}\n\nfunction useWindowDimensions() {\n  const [windowWidth, setWindowWidth] = useState(getWindowDimensions);\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowDimensions());\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowWidth;\n}\n\nexport default useWindowDimensions;\n","import { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useMatch, useNavigate, PathMatch, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  getDetails,\n  getLatest,\n  getMovies,\n  getTopRated,\n  getUpComing,\n  IGetDetails,\n  IGetMoviesLatets,\n  IGetMoviesResult,\n  IGetMoviesTop,\n  IGetUpComing,\n} from \"../api\";\nimport Details from \"../Components/Details\";\nimport { makeImagePath } from \"../untils\";\nimport useWindowDimensions from \"../useWindowDimensions\";\n\nconst Wrapper = styled.div`\n  padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\nconst SliderWrap = styled.div`\n  position: relative;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n`;\n\nconst SliderTitle = styled.h3`\n  padding: 10px 20px;\n  position: absolute;\n  bottom: 100px;\n  left: 0px;\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  left: 0px;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n  height: 200px;\n  font-size: 66px;\n  border-radius: 15px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst NextBtn = styled(motion.div)`\n  width: 100px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.8);\n  position: absolute;\n  right: 0;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n`;\nconst PrevBtn = styled(motion.div)`\n  width: 100px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.8);\n  position: absolute;\n  left: 0;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n`;\nconst BtnSvg = styled(motion.svg)`\n  padding: 40px;\n  fill: white;\n`;\nconst InfoWrap = styled.div`\n  position: relative;\n  height: 200px;\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: -80px;\n  border-radius: 0px 0px 10px 10px;\n  height: auto;\n  display: none;\n  z-index: 1;\n\n  h4 {\n    padding-top: 20px;\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n  }\n`;\n\nconst IconWrap = styled.div`\n  width: 100%;\n  height: 40px;\n  gap: 20px;\n  padding-left: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst InfoIcon = styled.svg`\n  width: 30px;\n  height: 30px;\n  fill: white;\n  display: block;\n  &:last-child {\n    margin-left: 90px;\n  }\n`;\nconst InfoText = styled.p`\n  padding: 10px;\n  font-size: 12px;\n  text-transform: uppercase;\n  float: left;\n`;\n\nconst LatestWrap = styled.div`\n  position: relative;\n  top: 900px;\n  background-color: red;\n`;\n\nconst LatestImg = styled.div<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  /* opacity: 0; */\n  z-index: 2;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 150vh;\n  padding-bottom: 20px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  /* overflow: hidden; */\n  background-color: ${(props) => props.theme.black.lighter};\n  z-index: 2;\n`;\n\nconst BoxVariants = {\n  narmal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    display: \"block\",\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Movies() {\n  //windowRisize\n  const width = useWindowDimensions();\n  const params = useParams();\n  //useState\n  const [index, setIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [upIndex, setUpIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [back, setBack] = useState(false);\n  //slider\n  const liVar = {\n    entry: (back: boolean) => ({\n      x: back ? -width - 5 : width + 5,\n      opacity: 0,\n    }),\n    center: { x: 0, opacity: 1 },\n    exit: (back: boolean) => ({ x: back ? width + 5 : -width - 5, opacity: 0 }),\n  };\n\n  const navigate = useNavigate();\n  const bigMovieMatch: PathMatch<string> | null = useMatch(\"/movies/:id\");\n  const { scrollY } = useViewportScroll();\n\n  // useQuery<get data>\n  const { data: latestData, isLoading: latestLoading } =\n    useQuery<IGetMoviesLatets>([\"movies\", \"latest\"], getLatest);\n  const { data: moviesData, isLoading: moviesLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\n  const { data: topData, isLoading: topLoading } = useQuery<IGetMoviesTop>(\n    [\"movies\", \"topRated\"],\n    getTopRated\n  );\n  const { data: upData, isLoading: upLoading } = useQuery<IGetUpComing>(\n    [\"movies\", \"upComing\"],\n    getUpComing\n  );\n  const { data: detailsData, isLoading: genreLoading } = useQuery<IGetDetails>(\n    [\"movies\", \"details\"],\n    () => getDetails(params.id + \"\")\n  );\n\n  const incraseIndex = (name: number) => {\n    if (moviesData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = moviesData?.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      const result = name >= 0;\n      if (result) {\n        setBack(false);\n        setIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n      } else {\n        setBack(true);\n        setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      }\n    }\n  };\n\n  const topMoviesIndex = (name: number) => {\n    if (topData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = topData?.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      const result = +name >= 0;\n      if (result) {\n        setBack(false);\n        setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      } else {\n        setBack(true);\n        setTopIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n      }\n    }\n  };\n\n  const upComingIndex = (name: number) => {\n    if (upData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = upData?.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      const result = +name >= 0;\n      if (result) {\n        setBack(false);\n        setUpIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      } else {\n        setBack(true);\n        setUpIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n      }\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    navigate(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => navigate(`/movies`);\n  const clickedMovie =\n    bigMovieMatch?.params.id &&\n    moviesData?.results.find(\n      (movie) => movie.id === Number(bigMovieMatch.params.id)\n    );\n\n  return (\n    <Wrapper>\n      {moviesLoading && upLoading && topLoading ? (\n        <Loader>Movies is Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(moviesData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{moviesData?.results[0].title}</Title>\n            <Overview>{moviesData?.results[0].overview}</Overview>\n          </Banner>\n          <SliderWrap>\n            <SliderTitle>Now Playing</SliderTitle>\n            <Slider>\n              <AnimatePresence\n                custom={back}\n                initial={false}\n                onExitComplete={toggleLeaving}\n              >\n                <Row\n                  variants={liVar}\n                  initial=\"entry\"\n                  animate=\"center\"\n                  exit=\"exit\"\n                  transition={{ type: \"tween\", duration: 1 }}\n                  key={index}\n                  custom={back}\n                >\n                  {moviesData?.results\n                    .slice(1)\n                    .slice(offset * index, offset * index + offset)\n                    .map((movie) => (\n                      <Box\n                        layoutId={movie.id + \"\"}\n                        key={movie.id}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        variants={BoxVariants}\n                        onClick={() => onBoxClicked(movie.id)}\n                        transition={{ type: \"tween\" }}\n                        bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                      >\n                        <InfoWrap>\n                          <Info variants={infoVariants}>\n                            <IconWrap>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M188.3 147.1C195.8 142.8 205.1 142.1 212.5 147.5L356.5 235.5C363.6 239.9 368 247.6 368 256C368 264.4 363.6 272.1 356.5 276.5L212.5 364.5C205.1 369 195.8 369.2 188.3 364.9C180.7 360.7 176 352.7 176 344V167.1C176 159.3 180.7 151.3 188.3 147.1V147.1zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n                              </InfoIcon>\n                            </IconWrap>\n                            <h4>{movie.title}</h4>\n\n                            <InfoText>\n                              {movie.adult\n                                ? \"청소년관람불가\"\n                                : \"청소년관람가능\"}\n                            </InfoText>\n                            <InfoText>{movie.original_language}</InfoText>\n                            <InfoText>{movie.release_date}</InfoText>\n                          </Info>\n                        </InfoWrap>\n                      </Box>\n                    ))}\n                </Row>\n              </AnimatePresence>\n              <PrevBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => incraseIndex(-1)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n                </BtnSvg>\n              </PrevBtn>\n              <NextBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => incraseIndex(0)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />\n                </BtnSvg>\n              </NextBtn>\n            </Slider>\n          </SliderWrap>\n          <SliderWrap style={{ top: \"300px\" }}>\n            <SliderTitle>Top Rated</SliderTitle>\n            <Slider>\n              <AnimatePresence\n                custom={back}\n                initial={false}\n                onExitComplete={toggleLeaving}\n              >\n                <Row\n                  variants={liVar}\n                  initial=\"entry\"\n                  animate=\"center\"\n                  exit=\"exit\"\n                  transition={{ type: \"tween\", duration: 1 }}\n                  key={topIndex}\n                  custom={back}\n                >\n                  {topData?.results\n                    .slice(1)\n                    .slice(offset * topIndex, offset * topIndex + offset)\n                    .map((movie) => (\n                      <Box\n                        layoutId={movie.id + \"\"}\n                        key={movie.id}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        variants={BoxVariants}\n                        onClick={() => onBoxClicked(movie.id)}\n                        transition={{ type: \"tween\" }}\n                        bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                      >\n                        <InfoWrap>\n                          <Info variants={infoVariants}>\n                            <IconWrap>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M188.3 147.1C195.8 142.8 205.1 142.1 212.5 147.5L356.5 235.5C363.6 239.9 368 247.6 368 256C368 264.4 363.6 272.1 356.5 276.5L212.5 364.5C205.1 369 195.8 369.2 188.3 364.9C180.7 360.7 176 352.7 176 344V167.1C176 159.3 180.7 151.3 188.3 147.1V147.1zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n                              </InfoIcon>\n                            </IconWrap>\n                            <h4>{movie.title}</h4>\n\n                            <InfoText>\n                              {movie.adult\n                                ? \"청소년관람불가\"\n                                : \"청소년관람가능\"}\n                            </InfoText>\n                            <InfoText>{movie.original_language}</InfoText>\n                            <InfoText>{movie.release_date}</InfoText>\n                          </Info>\n                        </InfoWrap>\n                      </Box>\n                    ))}\n                </Row>\n              </AnimatePresence>\n              <PrevBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => topMoviesIndex(-1)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n                </BtnSvg>\n              </PrevBtn>\n              <NextBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => topMoviesIndex(0)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />\n                </BtnSvg>\n              </NextBtn>\n            </Slider>\n          </SliderWrap>\n          <SliderWrap style={{ top: \"600px\" }}>\n            <SliderTitle>Up-Coming</SliderTitle>\n            <Slider>\n              <AnimatePresence\n                custom={back}\n                initial={false}\n                onExitComplete={toggleLeaving}\n              >\n                <Row\n                  variants={liVar}\n                  initial=\"entry\"\n                  animate=\"center\"\n                  exit=\"exit\"\n                  transition={{ type: \"tween\", duration: 1 }}\n                  key={upIndex}\n                  custom={back}\n                >\n                  {upData?.results\n                    .slice(1)\n                    .slice(offset * upIndex, offset * upIndex + offset)\n                    .map((movie) => (\n                      <Box\n                        layoutId={movie.id + \"\"}\n                        key={movie.id}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        variants={BoxVariants}\n                        onClick={() => onBoxClicked(movie.id)}\n                        transition={{ type: \"tween\" }}\n                        bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                      >\n                        <InfoWrap>\n                          <Info variants={infoVariants}>\n                            <IconWrap>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M188.3 147.1C195.8 142.8 205.1 142.1 212.5 147.5L356.5 235.5C363.6 239.9 368 247.6 368 256C368 264.4 363.6 272.1 356.5 276.5L212.5 364.5C205.1 369 195.8 369.2 188.3 364.9C180.7 360.7 176 352.7 176 344V167.1C176 159.3 180.7 151.3 188.3 147.1V147.1zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n                              </InfoIcon>\n                            </IconWrap>\n                            <h4>{movie.title}</h4>\n\n                            <InfoText>\n                              {movie.adult\n                                ? \"청소년관람불가\"\n                                : \"청소년관람가능\"}\n                            </InfoText>\n                            <InfoText>{movie.original_language}</InfoText>\n                            <InfoText>{movie.release_date}</InfoText>\n                          </Info>\n                        </InfoWrap>\n                      </Box>\n                    ))}\n                </Row>\n              </AnimatePresence>\n              <PrevBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => upComingIndex(-1)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n                </BtnSvg>\n              </PrevBtn>\n              <NextBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => upComingIndex(0)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />\n                </BtnSvg>\n              </NextBtn>\n            </Slider>\n          </SliderWrap>\n          <LatestWrap></LatestWrap>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigMovie\n                  layoutId={bigMovieMatch.params.id}\n                  style={{\n                    top: scrollY.get() + 100,\n                  }}\n                >\n                  <Details></Details>\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Movies;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useQuery } from \"react-query\";\nimport { Navigate, useLocation, useMatch, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getSearch, IGetSearch } from \"../api\";\nimport { makeImagePath } from \"../untils\";\n\nconst Wrapper = styled.div`\n  padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst BoxWrap = styled.div`\n  width: 100%;\n  padding: 60px;\n`;\nconst Title = styled.h1`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 32px;\n  padding-top: 100px;\n`;\nconst BoxContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 10px;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n  height: 200px;\n  font-size: 66px;\n  border-radius: 15px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst InfoWrap = styled.div`\n  position: relative;\n  height: 200px;\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  /* opacity: 0; */\n  position: absolute;\n  width: 100%;\n  bottom: 0px;\n  border-radius: 0px 0px 10px 10px;\n  height: auto;\n  display: none;\n  z-index: 1;\n\n  h4 {\n    padding-top: 20px;\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n  }\n`;\n\nconst IconWrap = styled.div`\n  width: 100%;\n  height: 40px;\n  gap: 20px;\n  padding-left: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst InfoIcon = styled.svg`\n  width: 30px;\n  height: 30px;\n  fill: white;\n  display: block;\n  &:last-child {\n    margin-left: 90px;\n  }\n`;\nconst InfoText = styled.p`\n  padding: 10px;\n  font-size: 12px;\n  text-transform: uppercase;\n  float: left;\n`;\n\nconst infoVariants = {\n  hover: {\n    display: \"block\",\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\nconst BoxVariants = {\n  narmal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nfunction Search() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const movieMacth = useMatch(`/search/movie/:id`);\n  const tvMacth = useMatch(`/search/tv/:id`);\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n  // console.log(keyword);\n  const { data, isLoading } = useQuery<IGetSearch>([\"search\", keyword], () =>\n    getSearch(keyword + \"\")\n  );\n  console.log(data?.results);\n  const onBoxClicked = (mediaType: string, searchId: number) => {\n    if (mediaType === \"movie\") {\n      navigate(`/search/movies/${searchId}`);\n    } else if (mediaType === \"tv\") {\n      navigate(`/search/tv/${searchId}`);\n    }\n  };\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>...Loading</Loader>\n      ) : (\n        <>\n          <BoxWrap>\n            <Title>Movie Search Results</Title>\n            <BoxContainer>\n              {data?.results.map((movie) => (\n                <AnimatePresence>\n                  {movie.media_type === \"movie\" && (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={BoxVariants}\n                      onClick={() => {\n                        onBoxClicked(movie.media_type, movie.id);\n                      }}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={\n                        movie.backdrop_path\n                          ? makeImagePath(movie.backdrop_path, \"w500\")\n                          : makeImagePath(movie.poster_path, \"w500\")\n                      }\n                    >\n                      <InfoWrap>\n                        <Info variants={infoVariants}>\n                          <h4>{movie.title}</h4>\n                        </Info>\n                      </InfoWrap>\n                    </Box>\n                  )}\n                </AnimatePresence>\n              ))}\n            </BoxContainer>\n          </BoxWrap>\n          <BoxWrap>\n            <Title>Tv Search Results</Title>\n            <BoxContainer>\n              {data?.results.map((tv) => (\n                <AnimatePresence>\n                  {tv.media_type === \"tv\" && (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={BoxVariants}\n                      onClick={() => {\n                        onBoxClicked(tv.media_type, tv.id);\n                      }}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <InfoWrap>\n                        <Info variants={infoVariants}>\n                          <h4>{tv.title}</h4>\n                        </Info>\n                      </InfoWrap>\n                    </Box>\n                  )}\n                </AnimatePresence>\n              ))}\n            </BoxContainer>\n          </BoxWrap>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Search;\n","import { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport {\n  useMatch,\n  useNavigate,\n  PathMatch,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  getDetails,\n  getLatest,\n  getMovies,\n  getPopularTv,\n  getTopRated,\n  getTopRatedTv,\n  getTv,\n  getUpComing,\n  IGetDetails,\n  IGetMoviesLatets,\n  IGetMoviesResult,\n  IGetMoviesTop,\n  IGetPopular,\n  IGetPopularTv,\n  IGetTopTv,\n  IGetTv,\n  IGetUpComing,\n} from \"../api\";\nimport Details from \"../Components/Details\";\nimport DetailsTv from \"../Components/DetailsTv\";\nimport Similar from \"../Components/Similar\";\nimport { makeImagePath } from \"../untils\";\nimport useWindowDimensions from \"../useWindowDimensions\";\n\nconst Wrapper = styled.div`\n  padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\nconst SliderWrap = styled.div`\n  position: relative;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n`;\n\nconst SliderTitle = styled.h3`\n  padding: 10px 20px;\n  position: absolute;\n  bottom: 100px;\n  left: 0px;\n  color: white;\n  font-size: 32px;\n  font-weight: 700;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  left: 0px;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n  height: 200px;\n  font-size: 66px;\n  border-radius: 15px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst NextBtn = styled(motion.div)`\n  width: 100px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.8);\n  position: absolute;\n  right: 0;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n`;\nconst PrevBtn = styled(motion.div)`\n  width: 100px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.8);\n  position: absolute;\n  left: 0;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n`;\nconst BtnSvg = styled(motion.svg)`\n  padding: 40px;\n  fill: white;\n`;\nconst InfoWrap = styled.div`\n  position: relative;\n  height: 200px;\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: -80px;\n  border-radius: 0px 0px 10px 10px;\n  height: auto;\n  display: none;\n  z-todayindex: 1;\n\n  h4 {\n    padding-top: 20px;\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n  }\n`;\n\nconst IconWrap = styled.div`\n  width: 100%;\n  height: 40px;\n  gap: 20px;\n  padding-left: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst InfoIcon = styled.svg`\n  width: 30px;\n  height: 30px;\n  fill: white;\n  display: block;\n  &:last-child {\n    margin-left: 90px;\n  }\n`;\nconst InfoText = styled.p`\n  padding: 10px;\n  font-size: 12px;\n  text-transform: uppercase;\n  float: left;\n`;\n\nconst LatestWrap = styled.div`\n  position: relative;\n  top: 900px;\n  background-color: red;\n`;\n\nconst LatestImg = styled.div<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  /* opacity: 0; */\n  z-todayindex: 2;\n`;\n\nconst BigTv = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 150vh;\n  padding-bottom: 20px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  /* overflow: hidden; */\n  background-color: ${(props) => props.theme.black.lighter};\n  z-todayindex: 2;\n`;\n\nconst BoxVariants = {\n  narmal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    display: \"block\",\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Tv() {\n  const [leaving, setLeaving] = useState(false);\n  const [todayIndex, setTodayIndex] = useState(0);\n  const [popularIndex, setPopularIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [back, setBack] = useState(false);\n  const navigate = useNavigate();\n  const bigMovieMatch: PathMatch<string> | null = useMatch(\"/tv/:id\");\n  const { scrollY } = useViewportScroll();\n\n  const width = useWindowDimensions();\n  const liVar = {\n    entry: (back: boolean) => ({\n      x: back ? -width - 5 : width + 5,\n      opacity: 0,\n    }),\n    center: { x: 0, opacity: 1 },\n    exit: (back: boolean) => ({ x: back ? width + 5 : -width - 5, opacity: 0 }),\n  };\n  const { data: todayData, isLoading: todayLoading } = useQuery<IGetTv>(\n    [\"tv\", \"Today\"],\n    getTv\n  );\n  const { data: popularData, isLoading: popularLoading } =\n    useQuery<IGetPopularTv>([\"tv\", \"popular\"], getPopularTv);\n  const { data: topData, isLoading: topLoading } = useQuery<IGetTopTv>(\n    [\"tv\", \"top\"],\n    getTopRatedTv\n  );\n\n  const incraseIndex = (name: number) => {\n    if (todayData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTv = todayData?.results.length - 1;\n      const maxIndex = Math.floor(totalTv / offset) - 1;\n      const result = name >= 0;\n      if (result) {\n        setBack(false);\n        setTodayIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      } else {\n        setBack(true);\n        setTodayIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n      }\n    }\n  };\n  const popularSliderIndex = (name: number) => {\n    if (popularData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTv = popularData?.results.length - 1;\n      const maxIndex = Math.floor(totalTv / offset) - 1;\n      const result = name >= 0;\n      if (result) {\n        setBack(false);\n        setPopularIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      } else {\n        setBack(true);\n        setPopularIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n      }\n    }\n  };\n  const topSliderIndex = (name: number) => {\n    if (topData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTv = topData?.results.length - 1;\n      const maxIndex = Math.floor(totalTv / offset) - 1;\n      const result = name >= 0;\n      if (result) {\n        setBack(false);\n        setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      } else {\n        setBack(true);\n        setTopIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n      }\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    navigate(`/tv/${tvId}`);\n  };\n  const onOverlayClick = () => navigate(`/tv`);\n\n  console.log(todayData);\n  return (\n    <Wrapper>\n      {todayLoading ? (\n        <Loader>tv is Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(todayData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{todayData?.results[0].name}</Title>\n            <Overview>{todayData?.results[0].overview}</Overview>\n          </Banner>\n          <SliderWrap>\n            <SliderTitle>Now Playing</SliderTitle>\n            <Slider>\n              <AnimatePresence\n                custom={back}\n                initial={false}\n                onExitComplete={toggleLeaving}\n              >\n                <Row\n                  variants={liVar}\n                  initial=\"entry\"\n                  animate=\"center\"\n                  exit=\"exit\"\n                  transition={{ type: \"tween\", duration: 1 }}\n                  key={todayIndex}\n                  custom={back}\n                >\n                  {todayData?.results\n                    .slice(1)\n                    .slice(offset * todayIndex, offset * todayIndex + offset)\n                    .map((tv) => (\n                      <Box\n                        layoutId={tv.id + \"\"}\n                        key={tv.id}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        variants={BoxVariants}\n                        onClick={() => onBoxClicked(tv.id)}\n                        transition={{ type: \"tween\" }}\n                        bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                      >\n                        <InfoWrap>\n                          <Info variants={infoVariants}>\n                            <IconWrap>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M188.3 147.1C195.8 142.8 205.1 142.1 212.5 147.5L356.5 235.5C363.6 239.9 368 247.6 368 256C368 264.4 363.6 272.1 356.5 276.5L212.5 364.5C205.1 369 195.8 369.2 188.3 364.9C180.7 360.7 176 352.7 176 344V167.1C176 159.3 180.7 151.3 188.3 147.1V147.1zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n                              </InfoIcon>\n                            </IconWrap>\n                            <h4>{tv.name}</h4>\n\n                            <InfoText>{tv.vote_average}</InfoText>\n                            <InfoText>{tv.original_language}</InfoText>\n                            <InfoText>{tv.first_air_date}</InfoText>\n                          </Info>\n                        </InfoWrap>\n                      </Box>\n                    ))}\n                </Row>\n              </AnimatePresence>\n              <PrevBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => incraseIndex(-1)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n                </BtnSvg>\n              </PrevBtn>\n              <NextBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => incraseIndex(0)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />\n                </BtnSvg>\n              </NextBtn>\n            </Slider>\n          </SliderWrap>\n          <SliderWrap style={{ top: \"300px\" }}>\n            <SliderTitle>Popular Tv Show</SliderTitle>\n            <Slider>\n              <AnimatePresence\n                custom={back}\n                initial={false}\n                onExitComplete={toggleLeaving}\n              >\n                <Row\n                  variants={liVar}\n                  initial=\"entry\"\n                  animate=\"center\"\n                  exit=\"exit\"\n                  transition={{ type: \"tween\", duration: 1 }}\n                  key={popularIndex}\n                  custom={back}\n                >\n                  {popularData?.results\n                    .slice(1)\n                    .slice(\n                      offset * popularIndex,\n                      offset * popularIndex + offset\n                    )\n                    .map((tv) => (\n                      <Box\n                        layoutId={tv.id + \"\"}\n                        key={tv.id}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        variants={BoxVariants}\n                        onClick={() => onBoxClicked(tv.id)}\n                        transition={{ type: \"tween\" }}\n                        bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                      >\n                        <InfoWrap>\n                          <Info variants={infoVariants}>\n                            <IconWrap>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M188.3 147.1C195.8 142.8 205.1 142.1 212.5 147.5L356.5 235.5C363.6 239.9 368 247.6 368 256C368 264.4 363.6 272.1 356.5 276.5L212.5 364.5C205.1 369 195.8 369.2 188.3 364.9C180.7 360.7 176 352.7 176 344V167.1C176 159.3 180.7 151.3 188.3 147.1V147.1zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n                              </InfoIcon>\n                            </IconWrap>\n                            <h4>{tv.name}</h4>\n\n                            <InfoText>{tv.vote_average}</InfoText>\n                            <InfoText>{tv.original_language}</InfoText>\n                            <InfoText>{tv.first_air_date}</InfoText>\n                          </Info>\n                        </InfoWrap>\n                      </Box>\n                    ))}\n                </Row>\n              </AnimatePresence>\n              <PrevBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => popularSliderIndex(-1)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n                </BtnSvg>\n              </PrevBtn>\n              <NextBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => popularSliderIndex(0)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />\n                </BtnSvg>\n              </NextBtn>\n            </Slider>\n          </SliderWrap>\n          <SliderWrap style={{ top: \"600px\" }}>\n            <SliderTitle>Top Tv Show</SliderTitle>\n            <Slider>\n              <AnimatePresence\n                custom={back}\n                initial={false}\n                onExitComplete={toggleLeaving}\n              >\n                <Row\n                  variants={liVar}\n                  initial=\"entry\"\n                  animate=\"center\"\n                  exit=\"exit\"\n                  transition={{ type: \"tween\", duration: 1 }}\n                  key={topIndex}\n                  custom={back}\n                >\n                  {topData?.results\n                    .slice(1)\n                    .slice(offset * topIndex, offset * topIndex + offset)\n                    .map((tv) => (\n                      <Box\n                        layoutId={tv.id + \"\"}\n                        key={tv.id}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        variants={BoxVariants}\n                        onClick={() => onBoxClicked(tv.id)}\n                        transition={{ type: \"tween\" }}\n                        bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                      >\n                        <InfoWrap>\n                          <Info variants={infoVariants}>\n                            <IconWrap>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M188.3 147.1C195.8 142.8 205.1 142.1 212.5 147.5L356.5 235.5C363.6 239.9 368 247.6 368 256C368 264.4 363.6 272.1 356.5 276.5L212.5 364.5C205.1 369 195.8 369.2 188.3 364.9C180.7 360.7 176 352.7 176 344V167.1C176 159.3 180.7 151.3 188.3 147.1V147.1zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M96 191.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V223.1C128 206.3 113.7 191.1 96 191.1zM512 227c0-36.89-30.05-66.92-66.97-66.92h-99.86C354.7 135.1 360 113.5 360 100.8c0-33.8-26.2-68.78-70.06-68.78c-46.61 0-59.36 32.44-69.61 58.5c-31.66 80.5-60.33 66.39-60.33 93.47c0 12.84 10.36 23.99 24.02 23.99c5.256 0 10.55-1.721 14.97-5.26c76.76-61.37 57.97-122.7 90.95-122.7c16.08 0 22.06 12.75 22.06 20.79c0 7.404-7.594 39.55-25.55 71.59c-2.046 3.646-3.066 7.686-3.066 11.72c0 13.92 11.43 23.1 24 23.1h137.6C455.5 208.1 464 216.6 464 227c0 9.809-7.766 18.03-17.67 18.71c-12.66 .8593-22.36 11.4-22.36 23.94c0 15.47 11.39 15.95 11.39 28.91c0 25.37-35.03 12.34-35.03 42.15c0 11.22 6.392 13.03 6.392 22.25c0 22.66-29.77 13.76-29.77 40.64c0 4.515 1.11 5.961 1.11 9.456c0 10.45-8.516 18.95-18.97 18.95h-52.53c-25.62 0-51.02-8.466-71.5-23.81l-36.66-27.51c-4.315-3.245-9.37-4.811-14.38-4.811c-13.85 0-24.03 11.38-24.03 24.04c0 7.287 3.312 14.42 9.596 19.13l36.67 27.52C235 468.1 270.6 480 306.6 480h52.53c35.33 0 64.36-27.49 66.8-62.2c17.77-12.23 28.83-32.51 28.83-54.83c0-3.046-.2187-6.107-.6406-9.122c17.84-12.15 29.28-32.58 29.28-55.28c0-5.311-.6406-10.54-1.875-15.64C499.9 270.1 512 250.2 512 227z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\" />\n                              </InfoIcon>\n                              <InfoIcon\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 512 512\"\n                              >\n                                <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n                              </InfoIcon>\n                            </IconWrap>\n                            <h4>{tv.name}</h4>\n\n                            <InfoText>{tv.vote_average}</InfoText>\n                            <InfoText>{tv.original_language}</InfoText>\n                            <InfoText>{tv.first_air_date}</InfoText>\n                          </Info>\n                        </InfoWrap>\n                      </Box>\n                    ))}\n                </Row>\n              </AnimatePresence>\n              <PrevBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => topSliderIndex(-1)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n                </BtnSvg>\n              </PrevBtn>\n              <NextBtn\n                whileHover={{ opacity: 1, transition: { duration: 1 } }}\n                onClick={() => topSliderIndex(0)}\n              >\n                <BtnSvg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                >\n                  <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />\n                </BtnSvg>\n              </NextBtn>\n            </Slider>\n          </SliderWrap>\n          <LatestWrap></LatestWrap>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigTv\n                  layoutId={bigMovieMatch.params.id}\n                  style={{\n                    top: scrollY.get() + 100,\n                  }}\n                >\n                  <DetailsTv></DetailsTv>\n                </BigTv>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tv;\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Details from \"./Components/Details\";\nimport DetailsTv from \"./Components/DetailsTv\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Movies from \"./Routes/Movies\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\n        <Route path=\"/movies\" element={<Movies />}>\n          <Route path=\"/movies/:id\" element={<Details />} />\n        </Route>\n        <Route path=\"/tv\" element={<Tv />}>\n          <Route path=\"/tv/:id\" element={<DetailsTv />} />\n        </Route>\n        <Route path=\"/search\" element={<Search />}>\n          <Route path=\"/search/movies/:id\" element={<Details />} />\n          <Route path=\"/search/tv/:id\" element={<DetailsTv />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color:black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\nred: \"#E51013\",\nblack: {\nveryDark: \"#141414\",\ndarker: \"#181818\",\nlighter: \"#2F2F2F\",\n},\nwhite: {\nlighter: \"#fff\",\ndarker: \"#e5e5e5\",\n},\n};"],"sourceRoot":""}